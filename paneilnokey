-- SCRIPT ANTILAG + PAINEL LIMPO E FUNCIONAL
-- Baseado no script original, mas sem ofuscação problemática

-- ============ CONFIG =============
local ENABLE_STRIP_SKINS = true
local ENABLE_NO_WALLS = false -- Desabilitado por problemas
local ENABLE_WALL_HACK = false
local WALL_SCAN_INTERVAL = 5.0
local SHOW_FPS_PING = true
local ENABLE_BRAINHOT_ESP = true
local ENABLE_ANTI_AURA_LAG = true

-- ============ SERVICES ============
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")
local StatsService = game:GetService("Stats")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- ============ WALLS ===============
local WALL_KEYWORDS = {"wall","parede","barrier","invisible","barreira","colisão","block","border","gate","bar","kill","killbrick"}
local PROTECTED_KEYWORDS = {"floor","chão","solo","ground","terrain","map","mundo","world","spawn","teleport","portal","platform","plataforma"}
local ENABLE_REMOVE_WALLS = false
local WALL_TAG = "NoWallProcessed"
local WALL_TRANSPARENCY = 0.5

-- ============ ANTI-AURA CONFIG =============
local AURA_KEYWORDS = {"aura","effect","efeito","glow","brilho","sparkle","particle","fogo","fire","fumaça","smoke","luz","light","raio","beam","magic","mágica","halo","circle","ring","shockwave","onda"}
local AURA_TAG = "AntiAuraProcessed"

-- ============ BRAINHOT ESP CONFIG =============
local allowSecretByName = {
    ["La Sahur Combinasion"] = true,
    ["Graipuss Medussi"] = true,
    ["Pot Hotspot"] = true,
    ["Chicleteira Bicicleteira"] = true,
    ["La Grande Combinasion"] = true,
    ["Los Combinasionas"] = true,
    ["Nuclearo Dinossauro"] = true,
    ["La Karkerkar Combinasion"] = true,
    ["Los Hotspotsitos"] = true,
    ["Tralaledon"] = true,
    ["Esok Sekolah"] = true,
    ["Ketupat Kepat"] = true,
    ["Los Bros"] = true,
    ["La Supreme Combinasion"] = true,
    ["Ketchuru and Musturu"] = true,
    ["Garama and Madundung"] = true,
    ["Spaghetti Tualetti"] = true,
    ["Dragon Cannelloni"] = true,
    ["Secret Lucky Block"] = true,
}

-- ============ ADMIN PANEL =============
local ADMIN_COMMANDS = {"ragdoll","balloon","jail","morph","jumpscare","inverse","tiny","rocket"}

-- ============ VARIABLES =============
local fpsPingGui = nil
local rainbowOffset = 0
local frameCount = 0
local lastFpsUpdate = 0
local currentFps = 0
local lastWallScan = 0
local lastAuraScan = 0
local AURA_SCAN_INTERVAL = 3.0
local brainhotHighlights = {}
local playerHighlights = {}

-- ============ UTILS =============
local function strContainsAny(s, list)
    s = string.lower(s or "")
    for _,w in ipairs(list) do
        if string.find(s, string.lower(w)) then
            return true
        end
    end
    return false
end

local function isProtectedStructure(instance)
    if not instance or not instance.Name then return false end
    local name = string.lower(instance.Name)
    if strContainsAny(name, PROTECTED_KEYWORDS) then return true end
    if instance:IsA("BasePart") and instance.Size.Magnitude > 500 then return true end
    return false
end

-- ============ FPS/PING DISPLAY ============
local function createFpsPingDisplay()
    if not SHOW_FPS_PING then return end
    
    if fpsPingGui then
        fpsPingGui:Destroy()
    end
    
    fpsPingGui = Instance.new("ScreenGui")
    fpsPingGui.Name = "FpsPingDisplay"
    fpsPingGui.ResetOnSpawn = false
    fpsPingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    fpsPingGui.Parent = CoreGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 200, 0, 40)
    frame.Position = UDim2.new(0.5, -100, 0, 10)
    frame.BackgroundTransparency = 0.8
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BorderSizePixel = 0
    frame.Parent = fpsPingGui
    
    local fpsLabel = Instance.new("TextLabel")
    fpsLabel.Name = "FpsLabel"
    fpsLabel.Size = UDim2.new(0.5, 0, 1, 0)
    fpsLabel.Position = UDim2.new(0, 0, 0, 0)
    fpsLabel.BackgroundTransparency = 1
    fpsLabel.Text = "FPS: 0"
    fpsLabel.TextColor3 = Color3.new(1, 1, 1)
    fpsLabel.TextScaled = true
    fpsLabel.Font = Enum.Font.GothamBold
    fpsLabel.TextXAlignment = Enum.TextXAlignment.Left
    fpsLabel.Parent = frame
    
    local pingLabel = Instance.new("TextLabel")
    pingLabel.Name = "PingLabel"
    pingLabel.Size = UDim2.new(0.5, 0, 1, 0)
    pingLabel.Position = UDim2.new(0.5, 0, 0, 0)
    pingLabel.BackgroundTransparency = 1
    pingLabel.Text = "PING: 0ms"
    pingLabel.TextColor3 = Color3.new(1, 1, 1)
    pingLabel.TextScaled = true
    pingLabel.Font = Enum.Font.GothamBold
    pingLabel.TextXAlignment = Enum.TextXAlignment.Right
    pingLabel.Parent = frame
    
    return fpsLabel, pingLabel
end

local function getRainbowColor(offset)
    local time = tick() + offset
    local r = math.sin(time * 1) * 0.5 + 0.5
    local g = math.sin(time * 1 + 2) * 0.5 + 0.5
    local b = math.sin(time * 1 + 4) * 0.5 + 0.5
    return Color3.new(r, g, b)
end

local function updateFpsCounter()
    frameCount = frameCount + 1
    local currentTime = tick()
    if currentTime - lastFpsUpdate >= 0.5 then
        currentFps = math.floor(frameCount / (currentTime - lastFpsUpdate))
        frameCount = 0
        lastFpsUpdate = currentTime
        return true
    end
    return false
end

local function updateFpsPingDisplay(fpsLabel, pingLabel)
    if not SHOW_FPS_PING or not fpsLabel or not pingLabel then return end
    
    -- Atualiza FPS
    fpsLabel.Text = "FPS: " .. currentFps
    
    -- Atualiza PING
    local success, pingValue = pcall(function()
        local stats = StatsService:FindFirstChild("PerformanceStats")
        if stats then
            local pingStats = stats:FindFirstChild("Ping")
            if pingStats then
                return math.floor(pingStats:GetValue())
            end
        end
        return "N/A"
    end)
    
    pingLabel.Text = "PING: " .. (success and pingValue or "N/A") .. (success and "ms" or "")
    
    -- Aplica efeito rainbow
    rainbowOffset = rainbowOffset + 0.05
    local rainbowColor = getRainbowColor(rainbowOffset)
    fpsLabel.TextColor3 = rainbowColor
    pingLabel.TextColor3 = rainbowColor
end

-- ============ ANTI-AURA SYSTEM ============
local function isAuraEffect(instance)
    if not instance or not instance.Name then return false end
    
    local name = string.lower(instance.Name)
    if strContainsAny(name, AURA_KEYWORDS) then return true end
    
    local success, result = pcall(function()
        return instance:IsA("ParticleEmitter") or 
               instance:IsA("Fire") or 
               instance:IsA("Smoke") or 
               instance:IsA("Sparkles") or 
               instance:IsA("Beam") or 
               instance:IsA("Trail")
    end)
    
    return success and result or false
end

local function removeAuraEffects()
    if not ENABLE_ANTI_AURA_LAG then return end
    if tick() - lastAuraScan < AURA_SCAN_INTERVAL then return end
    
    lastAuraScan = tick()
    
    -- Remove de players
    pcall(function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player and player.Character then
                for _, descendant in ipairs(player.Character:GetDescendants()) do
                    if descendant and not CollectionService:HasTag(descendant, AURA_TAG) and isAuraEffect(descendant) then
                        pcall(function()
                            local success, isEffect = pcall(function()
                                return descendant:IsA("ParticleEmitter") or 
                                       descendant:IsA("Fire") or 
                                       descendant:IsA("Smoke") or 
                                       descendant:IsA("Sparkles") or 
                                       descendant:IsA("Beam") or 
                                       descendant:IsA("Trail")
                            end)
                            
                            if success and isEffect then
                                if descendant.Enabled ~= nil then
                                    descendant.Enabled = false
                                end
                                task.spawn(function()
                                    task.wait(0.1)
                                    pcall(function()
                                        descendant:Destroy()
                                    end)
                                end)
                            end
                            CollectionService:AddTag(descendant, AURA_TAG)
                        end)
                    end
                end
            end
        end
    end)
    
    -- Remove do workspace
    pcall(function()
        for _, descendant in ipairs(Workspace:GetDescendants()) do
            if descendant and not CollectionService:HasTag(descendant, AURA_TAG) and isAuraEffect(descendant) then
                pcall(function()
                    local success, isEffect = pcall(function()
                        return descendant:IsA("ParticleEmitter") or 
                               descendant:IsA("Fire") or 
                               descendant:IsA("Smoke") or 
                               descendant:IsA("Sparkles") or 
                               descendant:IsA("Beam") or 
                               descendant:IsA("Trail")
                    end)
                    
                    if success and isEffect then
                        if descendant.Enabled ~= nil then
                            descendant.Enabled = false
                        end
                        task.spawn(function()
                            task.wait(0.1)
                            pcall(function()
                                descendant:Destroy()
                            end)
                        end)
                    end
                    CollectionService:AddTag(descendant, AURA_TAG)
                end)
            end
        end
    end)
end

-- ============ BRAINHOT ESP ============
local function createBrainhotHighlight(part, ownerName)
    if not part or not part:IsA("BasePart") then return end
    
    local hl = Instance.new("Highlight")
    hl.Name = "BrainhotESP"
    hl.FillTransparency = 0.3
    hl.OutlineColor = Color3.fromRGB(255, 50, 50)
    hl.FillColor = Color3.fromRGB(255, 150, 150)
    hl.OutlineTransparency = 0
    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    hl.Parent = part
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "BrainhotName"
    billboard.Size = UDim2.new(0, 300, 0, 80)
    billboard.StudsOffset = Vector3.new(0, 4, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = part
    
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = part:FindFirstChild('DisplayName') and part.DisplayName.Text or "Unknown"
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.Parent = billboard
    
    local ownerLabel = Instance.new("TextLabel")
    ownerLabel.Name = "OwnerLabel"
    ownerLabel.Size = UDim2.new(1, 0, 0.5, 0)
    ownerLabel.Position = UDim2.new(0, 0, 0.5, 0)
    ownerLabel.BackgroundTransparency = 1
    ownerLabel.Text = "Dono: " .. (ownerName or "Unknown")
    ownerLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    ownerLabel.TextScaled = true
    ownerLabel.Font = Enum.Font.Gotham
    ownerLabel.TextStrokeTransparency = 0
    ownerLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    ownerLabel.Parent = billboard
    
    return hl
end

local function scanForBrainhots()
    if not ENABLE_BRAINHOT_ESP then return end
    
    local plots = Workspace:FindFirstChild("Plots")
    if not plots then return end
    
    for _, plot in pairs(plots:GetChildren()) do
        local plotSign = plot:FindFirstChild('PlotSign')
        local ownerName = plotSign and 
                         plotSign:FindFirstChild('SurfaceGui') and 
                         plotSign.SurfaceGui:FindFirstChild('Frame') and 
                         plotSign.SurfaceGui.Frame:FindFirstChild('TextLabel') and 
                         plotSign.SurfaceGui.Frame.TextLabel.Text
        
        if ownerName and plot:FindFirstChild('AnimalPodiums') then
            ownerName = ownerName:gsub("'s Base", ""):gsub("%s+$", "")
            
            for _, podium in pairs(plot.AnimalPodiums:GetChildren()) do
                local animalOverhead = podium:FindFirstChild('Base') and 
                                     podium.Base:FindFirstChild('Spawn') and 
                                     podium.Base.Spawn:FindFirstChild('Attachment') and 
                                     podium.Base.Spawn.Attachment:FindFirstChild('AnimalOverhead')
                
                if animalOverhead then
                    local rarity = animalOverhead:FindFirstChild('Rarity')
                    if rarity and rarity.Text == "Secret" then
                        local displayName = animalOverhead:FindFirstChild('DisplayName')
                        if displayName then
                            local petName = displayName.Text
                            if allowSecretByName[petName] and not brainhotHighlights[animalOverhead] then
                                local highlight = createBrainhotHighlight(animalOverhead, ownerName)
                                brainhotHighlights[animalOverhead] = highlight
                                
                                animalOverhead.AncestryChanged:Connect(function()
                                    if not animalOverhead.Parent and brainhotHighlights[animalOverhead] then
                                        brainhotHighlights[animalOverhead]:Destroy()
                                        brainhotHighlights[animalOverhead] = nil
                                    end
                                end)
                            end
                        end
                    end
                end
            end
        end
    end
    
    -- Limpa highlights que não são mais válidos
    for animalOverhead, highlight in pairs(brainhotHighlights) do
        if not animalOverhead.Parent then
            highlight:Destroy()
            brainhotHighlights[animalOverhead] = nil
        else
            local rarity = animalOverhead:FindFirstChild('Rarity')
            local displayName = animalOverhead:FindFirstChild('DisplayName')
            if not rarity or not displayName or rarity.Text ~= "Secret" or not allowSecretByName[displayName.Text] then
                highlight:Destroy()
                brainhotHighlights[animalOverhead] = nil
            end
        end
    end
end

-- ============ ADMIN PANEL ============
local remote = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("Net"):WaitForChild("RE/AdminPanelService/ExecuteCommand")

local function executarComandos(playerName)
    if not playerName or playerName == "" then return end
    
    task.spawn(function()
        for _, command in ipairs(ADMIN_COMMANDS) do
            local targetName = playerName
            if type(targetName) == "string" and string.sub(targetName, 1, 1) == "@" then
                targetName = string.sub(targetName, 2)
            end
            
            local targetPlayer = Players:FindFirstChild(targetName)
            if targetPlayer then
                if command == "rocket" then
                    task.wait(3)
                end
                remote:FireServer(targetPlayer, command)
            end
            task.wait(0.25)
        end
    end)
end

-- Interface do painel
local function createAdminPanel()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    
    if playerGui:FindFirstChild("CmdUI") then
        playerGui.CmdUI:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CmdUI"
    screenGui.ResetOnSpawn = false
    screenGui.DisplayOrder = 999
    screenGui.Parent = playerGui
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 200, 0, 250)
    mainFrame.Position = UDim2.new(1, -220, 0.5, 100)
    mainFrame.BackgroundColor3 = Color3.fromRGB(14, 17, 22)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = 1
    stroke.Color = Color3.fromRGB(70, 70, 100)
    stroke.Transparency = 0.3
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Parent = mainFrame
    
    local titleFrame = Instance.new("Frame")
    titleFrame.Size = UDim2.new(1, 0, 0, 40)
    titleFrame.Position = UDim2.new(0, 0, 0, 0)
    titleFrame.BackgroundColor3 = Color3.fromRGB(14, 17, 22)
    titleFrame.BorderSizePixel = 0
    titleFrame.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 15)
    titleCorner.Parent = titleFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -20, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "FleischPanel"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleFrame
    
    local isHidden = false
    
    local function togglePanel()
        if isHidden then
            mainFrame.Visible = true
            isHidden = false
        else
            mainFrame.Visible = false
            isHidden = true
        end
    end
    
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
            togglePanel()
        end
    end)
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -20, 1, -60)
    scrollFrame.Position = UDim2.new(0, 10, 0, 60)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(14, 17, 22)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 8
    scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 120)
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scrollFrame.Parent = mainFrame
    
    local scrollCorner = Instance.new("UICorner")
    scrollCorner.CornerRadius = UDim.new(0, 10)
    scrollCorner.Parent = scrollFrame
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.Parent = scrollFrame
    listLayout.Padding = UDim.new(0, 8)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 8)
    padding.PaddingBottom = UDim.new(0, 8)
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.Parent = scrollFrame
    
    local function createPlayerButton(player)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, -16, 0, 40)
        button.BackgroundColor3 = Color3.fromRGB(14, 17, 22)
        button.Text = ""
        button.BorderSizePixel = 0
        button.AutoButtonColor = false
        button.Parent = scrollFrame
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 10)
        buttonCorner.Parent = button
        
        local buttonStroke = Instance.new("UIStroke")
        buttonStroke.Thickness = 1
        buttonStroke.Color = Color3.fromRGB(70, 70, 100)
        buttonStroke.Transparency = 0.4
        buttonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        buttonStroke.Parent = button
        
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, -50, 1, 0)
        nameLabel.Position = UDim2.new(0, 10, 0, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = player.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.Font = Enum.Font.GothamBold
        nameLabel.TextSize = 14
        nameLabel.TextXAlignment = Enum.TextXAlignment.Left
        nameLabel.Parent = button
        
        local hoverTween = TweenService:Create(button, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
            BackgroundColor3 = Color3.fromRGB(24, 28, 36)
        })
        
        local leaveTween = TweenService:Create(button, TweenInfo.new(0.2, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
            BackgroundColor3 = Color3.fromRGB(14, 17, 22)
        })
        
        button.MouseEnter:Connect(function()
            hoverTween:Play()
        end)
        
        button.MouseLeave:Connect(function()
            leaveTween:Play()
        end)
        
        button.MouseButton1Click:Connect(function()
            executarComandos(player.Name)
        end)
    end
    
    local function updatePlayerList()
        for _, child in ipairs(scrollFrame:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end
        
        local playersList = {}
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                table.insert(playersList, player)
            end
        end
        
        for _, player in ipairs(playersList) do
            createPlayerButton(player)
        end
    end
    
    task.spawn(function()
        while screenGui.Parent do
            updatePlayerList()
            task.wait(2)
        end
    end)
    
    updatePlayerList()
end

-- ============ STRIP SKINS ============
local function stripCharacter(character)
    if not ENABLE_STRIP_SKINS or not character then return end
    
    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Accessory") or item:IsA("Hat") then
            pcall(item.Destroy, item)
        end
    end
    
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("Shirt") or part:IsA("Pants") or part:IsA("ShirtGraphic") then
            pcall(part.Destroy, part)
        elseif part:IsA("CharacterMesh") then
            pcall(part.Destroy, part)
        elseif part:IsA("Decal") or part:IsA("Texture") then
            pcall(part.Destroy, part)
        elseif part:IsA("SurfaceAppearance") then
            pcall(part.Destroy, part)
        end
    end
end

-- ============ INITIALIZATION ============
local fpsLabel, pingLabel = nil, nil
if SHOW_FPS_PING then
    fpsLabel, pingLabel = createFpsPingDisplay()
    lastFpsUpdate = tick()
end

-- ============ MAIN LOOP ============
local frameCounter = 0
local auraCounter = 0
local brainhotCounter = 0
local stripCounter = 0

RunService.Heartbeat:Connect(function(deltaTime)
    -- FPS Counter
    if updateFpsCounter() then
        updateFpsPingDisplay(fpsLabel, pingLabel)
    end
    
    frameCounter = frameCounter + 1
    auraCounter = auraCounter + 1
    brainhotCounter = brainhotCounter + 1
    stripCounter = stripCounter + 1
    
    -- Anti-Aura (a cada 30 frames)
    if auraCounter >= 30 then
        auraCounter = 0
        task.spawn(removeAuraEffects)
    end
    
    -- Brainhot ESP (a cada 30 frames)
    if brainhotCounter >= 30 then
        brainhotCounter = 0
        task.spawn(scanForBrainhots)
    end
    
    -- Strip Skins (a cada 180 frames)
    if stripCounter >= 180 then
        stripCounter = 0
        task.spawn(function()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character then
                    for _, item in pairs(player.Character:GetChildren()) do
                        if item:IsA("Accessory") or item:IsA("Hat") or 
                           item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") then
                            pcall(item.Destroy, item)
                        end
                    end
                end
            end
        end)
    end
end)

-- ============ PLAYER EVENTS ============
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        -- Setup ESP if needed
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        -- Setup ESP if needed
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if playerHighlights[player] then
        playerHighlights[player]:Destroy()
        playerHighlights[player] = nil
    end
end)

-- ============ DELAYED INITIALIZATION ============
task.delay(1, scanForBrainhots)
task.delay(1, createAdminPanel)

-- ============ STARTUP MESSAGE ============
print(("="):rep(52))
print("✓ SCRIPT ANTILAG + ADMIN PANEL ATIVADO")
print("→ Display de FPS/PING ativado (sistema único)")
print("→ ESP para brainhots especiais ativado (USANDO LÓGICA DA CALCULADORA)")
print("→ Anti-lag para auras/efeitos ativado")
print("→ Remoção otimizada de skins/roupas/acessórios")
print("→ Painel de administração ativado (CTRL para abrir/fechar)")
print("→ Sistema de FPS único e correto")
print("→ Loop otimizado com task.spawn")
print("→ ESP de brainhots corrigido para detectar em Plots")
print("→ Mostra nome do brainhot e dono")
print("→ Comandos: ragdoll, balloon, jail, morph, jumpscare, inverse, tiny, rocket")
print(("="):rep(52))
