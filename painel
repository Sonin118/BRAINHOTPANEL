-- Sistema de Autenticação BrainHot Panel
-- Loadstring: loadstring(game:HttpGet("https://raw.githubusercontent.com/Sonin118/BRAINHOTPANEL/main/paneilnokey"))()

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- CONFIGURAÇÕES ATUALIZADAS
local keyServiceURL = "https://raw.githubusercontent.com/Sonin118/BRAINHOTPANEL/main/KEYPAINEL"
local mainScriptURL = "https://raw.githubusercontent.com/Sonin118/BRAINHOTPANEL/main/paneilnokey"

-- Conectar eventos remotos para evitar warnings
local function connectRemoteEvents()
    pcall(function()
        local packages = ReplicatedStorage:FindFirstChild("Packages")
        if packages then
            local net_ure = packages:FindFirstChild("Net_URE")
            if net_ure then
                net_ure.OnClientEvent:Connect(function(...)
                    -- Handle remote events aqui
                    warn("Net_URE event received:", ...)
                end)
            end
        end
    end)
end

-- Função segura para verificar a chave
local function checkKey(inputKey)
    local success, currentValidKey = pcall(function()
        local response = game:HttpGet(keyServiceURL, true)
        return string.gsub(response, "%s+", "")
    end)
    
    if success and currentValidKey then
        inputKey = string.gsub(inputKey, "%s+", "")
        return inputKey == currentValidKey
    else
        warn("Erro ao verificar key: ", currentValidKey)
        return false
    end
end

-- Função segura para carregar o script principal
local function loadMainScript()
    local success, err = pcall(function()
        local scriptCode = game:HttpGet(mainScriptURL, true)
        if scriptCode and string.find(scriptCode, "function") then
            local mainScript = loadstring(scriptCode)
            if mainScript then
                mainScript()
            else
                error("Falha ao compilar o script principal")
            end
        else
            error("Script principal não encontrado ou vazio")
        end
    end)
    
    if not success then
        warn("Erro ao carregar panel: ", err)
        return false
    end
    return true
end

-- Função para criar a interface gráfica (mantida igual da versão anterior)
local function createKeyUI()
    -- [O código da interface permanece EXATAMENTE igual ao anterior]
    -- ... (todo o código da interface que eu forneci antes)
end

-- INÍCIO DO SCRIPT
print("[[ BrainHot Panel - Sistema de Autenticação ]]")

-- Conectar eventos remotos primeiro
connectRemoteEvents()

-- Tenta ler a key salva, se existir
local savedKey
local keyExists = pcall(function()
    savedKey = readfile("brainhot_key.txt")
end)

if keyExists and savedKey and checkKey(savedKey) then
    -- Key salva é VÁLIDA: Executa direto
    print("Key salva é válida! Carregando panel...")
    if not loadMainScript() then
        -- Se falhar ao carregar, mostra a interface
        warn("Falha ao carregar panel. Abrindo interface...")
        createKeyUI()
    end
else
    -- Key NÃO existe ou é INVÁLIDA: Mostra a interface
    print("Key não encontrada ou inválida. Abrindo interface...")
    createKeyUI()
end
